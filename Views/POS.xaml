<UserControl x:Class="Tienda_Rodrigo.Views.POS"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Tienda_Rodrigo.Views"
             mc:Ignorable="d" 
             d:DesignHeight="565" 
             d:DesignWidth="925"
             FontSize="15"
             Background="Transparent">
    <UserControl.Resources>
        <!--#region FOCUSVISUAL-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region BUTTON STYLE-->
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="Pink"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="Pink"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="White"/>
        <Style x:Key="BtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="Pink"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="10" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#f48fb1"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#f48fb1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#f48fb1"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#f48fb1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region TEXTBOX-->
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="10" x:Name="border" Background="White" BorderBrush="Pink" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ComboBoxEditableTextBox.Static.Background" Color="White"/>
        <Style x:Key="ComboBoxEditableTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#REGION DATAGRID-->
        <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="Pink"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border CornerRadius="0,0,10,10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="pink"/>
            <Setter Property="FontWeight" Value="Semibold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Background" Value="#bbdefb"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#bbdefb"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
    </UserControl.Resources>
    <Border CornerRadius="10"
            Background="Transparent">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="270"/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="70"/>
                <RowDefinition/>
                <RowDefinition Height="90"/>
                <RowDefinition Height="20" />
            </Grid.RowDefinitions>
            <!--#region TÍTULO-->
            <TextBlock Text="Punto de ventas"
                       Grid.Row="0"
                       Grid.ColumnSpan="4"
                       Grid.Column="0"
                       Foreground="Black"
                       FontSize="30"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"/>
            <!--#endregion-->
            <!--#region BUSCADOR-->
            <Label Content="Nombre/Código:"
                   Grid.Row="2"
                   Grid.Column="1"/>
            <TextBox Grid.Row="2"
                     Grid.Column="1"
                     HorizontalAlignment="Left"
                     Width="200"
                     Margin="120,0,0,0"
                     TextAlignment="Center"
                     FontSize="20"
                     x:Name="tbbuscar"
                     Style="{DynamicResource TextBoxStyle}"/>
            <Button Content="Buscar"
                    Grid.Row="2"
                    Grid.Column="1"
                    Cursor="Hand"
                    Width="100"
                     Background="Pink"
                    HorizontalAlignment="Right"
                    Margin="0,0,100,0"
                    x:Name="BtnBuscar"
                    Click="BuscarProducto"
                    Style="{DynamicResource BtnStyle}"/>
            <Button Content="Agregar producto"
                    Grid.Row="2"
                    Grid.Column="2"
                    Grid.RowSpan="3"
                     Background="Pink"
                    Cursor="Hand"
                    x:Name="BtnAgregar"
                    Click="AgregarProducto"
                    Style="{DynamicResource BtnStyle}"/>
            <Label Content="Nombre"
                   Grid.Row="4"
                   Grid.Column="1"/>
            <TextBox Grid.Row="4"
                     Grid.Column="1"
                     HorizontalAlignment="Left"
                     Width="200"
                     Margin="65,0,0,0"
                     TextAlignment="Center"
                     FontSize="20"
                     x:Name="TbNombre"
                     Style="{DynamicResource TextBoxStyle}"/>
            <Label Content="Precio"
                   Grid.Row="4"
                   Margin="270,0,0,0"
                   Grid.Column="1"/>
            <TextBox Grid.Row="4"
                     Grid.Column="1"
                     HorizontalAlignment="Left"
                     Width="80"
                     Margin="320,0,0,0"
                     TextAlignment="Center"
                     FontSize="20"
                     x:Name="TbPrecio"
                     Style="{DynamicResource TextBoxStyle}"/>
            <!--#endregion-->
            <!--#region DATAGRID-->
            <DataGrid AutoGenerateColumns="False"
                      FontSize="15"
                      x:Name="GridProductos"
                      CanUserAddRows="False"
                      CanUserResizeColumns="True"
                      CanUserResizeRows="False"
                      RowBackground="Transparent"
                      HeadersVisibility="Column"
                      GridLinesVisibility="Horizontal"
                      Grid.Column="1"
                      Grid.Row="6"
                      Grid.RowSpan="2"
                      Style="{DynamicResource DataGridStyle}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Código"
                                        Width="*"
                                        Binding="{Binding Codigo}"/>
                    <DataGridTextColumn Header="Nombre"
                                        Width="*"
                                        Binding="{Binding Nombre}"/>
                    <DataGridTextColumn Header="Precio"
                                        Width="*"
                                        Binding="{Binding Precio}"/>
                    <DataGridTextColumn Header="Cantidad"
                                        Width="*"
                                        Binding="{Binding Cantidad}"/>
                    <DataGridTextColumn Header="Precio Total"
                                        Width="*"
                                        Binding="{Binding PrecioTotal}"/>

                </DataGrid.Columns>
            </DataGrid>

            <!--#endregion-->
            <!--#region BOTONES-->
            <DockPanel Grid.Column="2"
                       Grid.Row="6"
                       Margin="10,0,0,0">
                <Button Width="80"
                        Height="70"
                        Cursor="Hand"
                        Click="EliminarProducto"
                        Content="Eliminar"
                        Background="Pink"
                        HorizontalAlignment="Left"
                        Style="{DynamicResource BtnStyle}"/>
                <Button Width="80"
                        Height="70"
                        Cursor="Hand"
                        Click="MostrarCesta"
                        Content="Cesta"
                        Background="Pink"
                        Margin="10,0,10,0"
                        HorizontalAlignment="Center"
                        Style="{DynamicResource BtnStyle}"/>
                <Button Width="80"
                        Height="70"
                        Cursor="Hand"
                        Click="Efectivo"
                        Content="Cuenta"
                        Background="Pink"
                        HorizontalAlignment="Left"
                        Style="{DynamicResource BtnStyle}"/>
            </DockPanel>
            <StackPanel Grid.Row="7"
                        Grid.Column="2"
                        VerticalAlignment="Center">
                <Label Content="Total: €"
                       x:Name="lbltotal"
                       FontWeight="SemiBold"
                       HorizontalContentAlignment="Right"
                       FontSize="30"/>
                <Label Content="Efectivo: €"
                       x:Name="lblefectivo"
                       HorizontalContentAlignment="Right"
                       FontSize="25"/>
                <Label Content="Cambio: €"
                       x:Name="lblcambio"
                       HorizontalContentAlignment="Right"
                       FontSize="25"/>
            </StackPanel>
            <DockPanel Grid.Row="8"
                       Grid.Column="2"
                       Margin="10,0,0,0"
                       VerticalAlignment="Bottom"
                       HorizontalAlignment="Center">
                <Button Width="120"
                        Height="70"
                        Cursor="Hand"
                        Background="Pink"
                        Click="AnularOrden"
                        Content="Cancelar Pedido"
                        Style="{DynamicResource BtnStyle}"/>
                <Button Width="120"
                        Height="70"
                        Cursor="Hand"
                        Background="CornflowerBlue"
                        Click="Pagar"
                        Content="Pagar"
                        HorizontalAlignment="Right"
                        Margin="10,0,0,0"
                        Style="{DynamicResource BtnStyle}"/>
            </DockPanel>
            <!--#endregion-->
        </Grid>

    </Border>
</UserControl>
